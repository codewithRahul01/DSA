#include<iostream>
using namespace std;

class node{
  public: 

  int data;
  node * left;
  node * right;

  node(int d){
    this->data=d;
    this->left=NULL;
    this->right=NULL;
  }
};

node* buildTree(node* root){

    cout<<"Enter the data: ";
    int data;
    cin>>data;

    root=new node(data);

    if(data==-1){
      return NULL;

    } 

    cout<<"Enter the data for inserting in the left of "<<data<<endl;
    root->left=buildTree(root->left);
    
    cout<<"Enter the data for inserting in the right of "<<data<<endl;
    root->right=buildTree(root->right);

    return root; 


}

void inorderTraversal(node* root){
    if(root==NULL){
      return ;
    }

    inorderTraversal(root->left);
    cout<<root->data<<" ";
    inorderTraversal(root->right);
}


void noOfLeaf(node* root,int &count){
    if(root==NULL){
      return ;
    }

    noOfLeaf(root->left,count);

    if(root->left==NULL&&root->right==NULL){
      count++;
    }
    noOfLeaf(root->right,count);
}


void preorderTraversal(node* root ){
  if(root==NULL){
    return ;
  }
    cout<<root->data<<" ";
  preorderTraversal(root->left );
  preorderTraversal(root->right);

}
void postorderTraversal(node* root ){
  if(root==NULL){
    return ;
  }
  postorderTraversal(root->left );
  postorderTraversal(root->right);

    cout<<root->data<<" ";
}

int main(){
  node* root = NULL;
  //1 2 4 -1 -1 5 -1 -1  3 6 -1 -1 -1

    root = buildTree(root);


cout<<endl<<"The inorder Traversal of Tree is: "<<endl;
  inorderTraversal(root);
cout<<endl<<"The preorder Traversal of Tree is: "<<endl;
  preorderTraversal(root);
  cout<<endl;
cout<<endl<<"The postorder Traversal of Tree is: "<<endl;
  postorderTraversal(root);
  cout<<endl;
  int count=0;
  
  noOfLeaf(root,count);
  cout<<"Number of leaf nodes are: "<<count<<endl;
  return 0;
}
 
